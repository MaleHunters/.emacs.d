;;; Automatically generated on Sun Nov 17 03:44:19 2019
;;; Invoked by cong@cong-pc using 26.3
(setq-default kill-ring '("init-symbols" ";; \346\230\257\345\220\246\345\220\257\347\224\250 lsp mode
(defvar *lsp-enable* nil)

;; \346\230\257\345\220\246\344\275\277\347\224\250 company-quickhelp
(defvar *quickhelp-enable* t)

;; \346\230\257\345\220\246\344\275\277\347\224\250 company-box
(defvar *company-box-enable* nil)
"))
(setq-default session-file-alist '(("~/.emacs.d/init.el" 494 1123 1 nil nil 494 (overwrite-mode)) ("~/.emacs.d/cong/init-modeline.el" 137 1 1 nil nil 1 (overwrite-mode)) ("~/Program/c/test.c" 308 nil 1 nil nil 308 (overwrite-mode)) ("~/.emacs.d/elpa/mode-icons-20190627.2121/mode-icons-autoloads.el" 972 nil 1 nil nil 972 (overwrite-mode)) ("~/.emacs.d/elpa/pabbrev-4.2.1/pabbrev-autoloads.el" 1898 nil 1 nil nil 1898 (overwrite-mode)) ("~/.emacs.d/cong/lsp.el" 1226 1 1 nil nil 2454 (overwrite-mode)) ("~/.emacs.d/elpa/exec-path-from-shell-20190426.2227/exec-path-from-shell-autoloads.el" 1420 nil 1 nil nil 1420 (overwrite-mode)) ("~/.emacs.d/elpa/company-lsp-20190612.1553/company-lsp-autoloads.el" 619 nil 1 nil nil 619 (overwrite-mode)) ("~/.emacs.d/elpa/lsp-typescript-20181219.442/lsp-typescript-autoloads.el" 916 nil 1 nil nil 916 (overwrite-mode)) ("~/.emacs.d/elpa/typescript-mode-20190710.2011/typescript-mode-autoloads.el" 1269 nil 1 nil nil 1269 (overwrite-mode)) ("~/.emacs.d/elpa/lsp-ruby-20181219.507/lsp-ruby-autoloads.el" 411 nil 1 nil nil 411 (overwrite-mode)) ("~/.emacs.d/elpa/lsp-python-20181108.754/lsp-python-autoloads.el" 422 nil 1 nil nil 422 (overwrite-mode)) ("~/.emacs.d/elpa/lsp-mode-20190725.553/lsp-mode-autoloads.el" 4742 nil 1 nil nil 4742 (overwrite-mode)) ("~/.emacs.d/elpa/dash-functional-20180107.1618/dash-functional-autoloads.el" 506 nil 1 nil nil 506 (overwrite-mode)) ("~/.emacs.d/elpa/ht-20190611.2131/ht-autoloads.el" 370 nil 1 nil nil 370 (overwrite-mode)) ("~/.emacs.d/elpa/spinner-1.7.3/spinner-autoloads.el" 2547 nil 1 nil nil 2547 (overwrite-mode)) ("~/.emacs.d/elpa/markdown-mode-20190305.319/markdown-mode-autoloads.el" 1171 nil 1 nil nil 1171 (overwrite-mode))))
(setq-default file-name-history '(#("/home/cong/.emacs.d/init.el" 0 27 (ivy-index 0)) "~/.emacs.d/init.el" "~/Program/c/test.c" "~/.emacs.d/cong/init-modeline.el" "/home/cong/Program/c/test.c" "~/.emacs.d/elpa/mode-icons-20190627.2121/mode-icons-autoloads.el" "~/.emacs.d/elpa/pabbrev-4.2.1/pabbrev-autoloads.el" "/home/cong/.emacs.d/cong/init-modeline.el" "~/.emacs.d/cong/init-windows.el" "~/.emacs.d/cong/init-evil.el" "~/.emacs.d/cong/init-whitespace.el" "~/.emacs.d/cong/init-gdb.el" "~/.emacs.d/cong/init-c.el" "~/.emacs.d/cong/lsp.el" "~/.emacs.d/elpa/exec-path-from-shell-20190426.2227/exec-path-from-shell-autoloads.el" "~/.emacs.d/elpa/company-lsp-20190612.1553/company-lsp-autoloads.el" "~/.emacs.d/elpa/lsp-typescript-20181219.442/lsp-typescript-autoloads.el" "~/.emacs.d/elpa/typescript-mode-20190710.2011/typescript-mode-autoloads.el" "~/.emacs.d/elpa/lsp-ruby-20181219.507/lsp-ruby-autoloads.el" "~/.emacs.d/elpa/lsp-python-20181108.754/lsp-python-autoloads.el" "~/.emacs.d/elpa/lsp-mode-20190725.553/lsp-mode-autoloads.el" "~/.emacs.d/elpa/dash-functional-20180107.1618/dash-functional-autoloads.el" "~/.emacs.d/elpa/ht-20190611.2131/ht-autoloads.el" "~/.emacs.d/elpa/spinner-1.7.3/spinner-autoloads.el" "~/.emacs.d/elpa/markdown-mode-20190305.319/markdown-mode-autoloads.el" "/home/cong/.emacs.d/cong/lsp.el" "~/.emacs.d/elpa/company-tabnine-20190723.2214/company-tabnine-autoloads.el" "~/.emacs.d/elpa/counsel-20190726.1745/counsel-autoloads.el" "~/.emacs.d/elpa/counsel-projectile-20190724.1903/counsel-projectile-autoloads.el" "~/.emacs.d/elpa/doom-modeline-20190726.1521/doom-modeline-autoloads.el" "~/.emacs.d/elpa/doom-themes-20190726.1839/doom-themes-autoloads.el" "~/.emacs.d/elpa/elpy-20190725.2259/elpy-autoloads.el" "~/.emacs.d/elpa/find-file-in-project-20190720.313/find-file-in-project-autoloads.el" "~/.emacs.d/elpa/helm-20190726.943/helm-autoloads.el" "~/.emacs.d/elpa/helm-core-20190726.1001/helm-core-autoloads.el" "~/.emacs.d/elpa/swiper-20190726.1746/swiper-autoloads.el" "~/.emacs.d/elpa/use-package-20190716.1829/use-package-autoloads.el" "~/.emacs.d/elpa/xcscope-20190723.629/xcscope-autoloads.el" "~/.emacs.d/elpa/yasnippet-snippets-20190725.1049/yasnippet-snippets-autoloads.el" "~/.emacs.d/elpa/electric-spacing-20161209.1957/electric-spacing-autoloads.el" "~/.emacs.d/elpa/ivy-20190726.1825/ivy-autoloads.el" "~/.emacs.d/elpa/which-key-20190723.1552/which-key-autoloads.el" "~/.emacs.d/elpa/yasnippet-20190724.1204/yasnippet-autoloads.el" "/home/cong/.emacs.d/cong/init-gdb.el" "/home/cong/.emacs.d/cong/init-whitespace.el" "/home/cong/.emacs.d/cong/init-evil.el" "/home/cong/.emacs.d/cong/init-windows.el" "~/.emacs.d/elpa/winum-20181119.1705/winum-autoloads.el" "/home/cong/.emacs.d/cong/init-c.el" "~/.emacs.d/elpa/git-20140128.1041/git-autoloads.el" "/home/cong/.emacs.d/cong/init-startup.el" "/home/cong/.emacs.d/cong/init-key.el" "~/.emacs.d/elpa/noflet-20141102.1454/noflet-autoloads.el" "~/Program/python/test.py" "~/.emacs.d/cong/init-startup.el" "~/.emacs.d/elpa/benchmark-init-20150905.938/benchmark-init-autoloads.el" "~/.emacs.d/elpa/doom-modeline-20190722.1827/doom-modeline-autoloads.el" "~/.emacs.d/elpa/shrink-path-20170813.247/shrink-path-autoloads.el" "~/.emacs.d/elpa/f-20190109.906/f-autoloads.el" "~/.emacs.d/elpa/nyan-mode-20170423.740/nyan-mode-autoloads.el" "~/.emacs.d/elpa/spaceline-20181223.2024/spaceline-autoloads.el" "/home/cong/Program/python/" "/home/cong/Program/python/test.py" "/home/cong/.emacs.d/cong/init-theme.el" "~/.emac.d/init.el" "/home/cong/.emacs.d/cong/treemacs-icons-theme.el" "/home/cong/.emacs.d/cong/theme1.el" "/home/cong/.emacs.d/cong/init-word.el" "/home/cong/.emacs.d/cong/init-undo-tree.el" "/home/cong/.emacs.d/cong/init-tree.el" "/home/cong/.emacs.d/cong/init-smartparents.el" "/home/cong/.emacs.d/cong/init-save-file.el" "/home/cong/.emacs.d/cong/init-return-jiemian.el" "/home/cong/.emacs.d/cong/init-package.el" "/home/cong/.emacs.d/cong/init-muban.el"))
(setq-default search-ring '("ivy" "mini" "rainbow-del" "modeline" "maybe" "after-load" "switch-window" "switch" "neotree" "gdb" "company" "electric-spacing" "auto-high" "bar"))
(setq-default regexp-search-ring '("ret" "powerline-selected" "format" "powerline" "winum" "mode-" "abbrev" "icon-elisp" "exec-p" "lsp-python" "company-lsp" "lsp-t" "lsp-rub" "lsp-mode" "projectile" "projectile-project-p"))
(setq-default buffer-name-history '("*scratch*" "test.c" "init-windows.el" "init-evil.el" "init-whitespace.el" "init-gdb.el" "init-c.el" "lsp.el" "*Help*" "*Messages*" "*Compile-Log*" "*Packages*" "init-startup.el" "init.el" "init-key.el" "init-modeline.el" "test.py" "init-dired.el" "init-ivy.el" "init-muban.el" "init-package.el" "init-return-jiemian.el" "init-save-file.el" "init-smartparents.el" "init-theme.el" "init-tree.el" "init-undo-tree.el" "init-word.el" "theme1.el" "treemacs-icons-theme.el" "auto-save.el" "*Flycheck error messages*" ".emacs.d" "init-base.el" "init-python.el" "*clang-output*"))
(setq-default coding-system-history '("nil"))
(setq-default command-history '((list-packages nil) (kill-buffer "*scratch*") (kill-buffer "test.c") (kill-buffer "init-windows.el") (kill-buffer "init-evil.el") (kill-buffer "init-whitespace.el") (kill-buffer "init-gdb.el") (kill-buffer "init-c.el") (kill-buffer "lsp.el") (package-menu-execute) (package-menu-mark-upgrades) (package-list-packages nil) (load-file "/home/cong/.emacs.d/cong/init-modeline.el") (kill-emacs nil) (load-file "/home/cong/.emacs.d/init.el") (kill-buffer "*Help*") (kill-buffer "*Messages*") (kill-buffer "*Compile-Log*") (kill-buffer "*Packages*") (kill-buffer "init-startup.el") (kill-buffer "init.el") (load-file "/home/cong/.emacs.d/cong/init-startup.el") (kill-buffer "init-key.el") (kill-buffer "init-modeline.el") (kill-buffer "test.py") (benchmark-init/show-durations-tree) (all-the-icons-install-fonts nil) (load-file "/home/cong/.emacs.d/cong/init-theme.el") (find-file "~/.emacs.d/init.el" t) (find-file "~/.emac.d/init.el" t)))
(setq-default compile-history '("make -k paixu.c" "make -k " "g++ test1.c -g -o test1"))
(setq-default counsel-M-x-history '(#("list-pack" 0 9 (ivy-index 0)) #("list-pac" 0 8 (ivy-index 0)) #("list-pa" 0 7 (ivy-index 0)) #("package-menu-e" 0 14 (ivy-index 0)) #("packagemenu-m" 0 13 (ivy-index 5)) #("package-li" 0 10 (ivy-index 0)) #("load" 0 4 (ivy-index 0)) #("kill" 0 4 (ivy-index 3)) #("load-f" 0 6 (ivy-index 0)) #("benchmair" 0 9 (ivy-index 0)) #("all-the-icons-install" 0 21 (ivy-index 0)) #("package-ins" 0 11 (ivy-index 0)) #("loa" 0 3 (ivy-index 0)) #("load-" 0 5 (ivy-index 0)) #("customize-gr" 0 12 (ivy-index 0)) #("company-ta" 0 10 (ivy-index 1)) #("gud-gdb" 0 7 (ivy-index 0)) #("eshell" 0 6 (ivy-index 0)) #("gud-g" 0 5 (ivy-index 0)) #("gud" 0 3 (ivy-index 0)) #("shell" 0 5 (ivy-index 0)) #("gdb" 0 3 (ivy-index 0)) #("many" 0 4 (ivy-index 1)) #("comp" 0 4 (ivy-index 0)) #("delete-file" 0 11 (ivy-index 0)) #("all-the" 0 7 (ivy-index 1)) #("package-install" 0 15 (ivy-index 0)) #("run-py" 0 6 (ivy-index 0)) #("python" 0 6 (ivy-index 2)) #("ipython" 0 7 (ivy-index 0)) #("delete" 0 6 (ivy-index 1)) #("list-p" 0 6 (ivy-index 0))))
(setq-default counsel-git-grep-cmd-history '("git --no-pager grep --full-name -n --no-color -i -I -e \"%s\""))
(setq-default extended-command-history '("load-file" "list-packages" "describe-coding-system" "run-python" "package-install"))
(setq-default gud-gdb-history '("gdb -i=mi paixu" "gdb -i=mi test1"))
(setq-default gud-gud-gdb-history '("gdb --fullname test" "gdb --fullname paixu"))
(setq-default helm-source-comint-input-ring '((name . "Comint history") (candidates . #[0 "r\302!\203 \206 p\211q\210\303	!\304\211:\2030 @\262\305\230\204) B\262A\262\202 \211\237\266\203)\207" [helm-current-buffer comint-input-ring buffer-live-p ring-elements nil ""] 5]) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action . helm-comint-input-ring-action) (multiline . helm-comint-max-offset) (filtered-candidate-transformer helm-fuzzy-highlight-matches helm-multiline-transformer) (match helm-mm-exact-match helm-mm-match) (redisplay . identity) (header-line . "C-j: helm-comint-input-ring-action (keeping session)") (multimatch) (group . helm)))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates closure (t) nil (let* \.\.\. \.\.\. \.\.\.)) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action ("Eval" closure \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) ("Edit and eval" closure \.\.\. \.\.\. \.\.\.)) (persistent-action . helm-sexp-eval) (multiline) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (redisplay . identity) (header-line . "C-j: helm-sexp-eval (keeping session)") (multimatch) (group . helm)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action . helm-type-file-actions) (persistent-action . ignore) (filtered-candidate-transformer helm-file-name-history-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (redisplay . identity) (header-line . "C-j: ignore (keeping session)") (multimatch) (group . helm)))
(setq-default helm-source-info-automake-history '((name . "Info Index: automake-history") (init . helm-info-init) (candidates . helm-candidates-in-buffer) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action ("Goto node" . helm-info-goto)) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (display-to-real . helm-info-display-to-real) (volatile) (match identity) (redisplay . identity) (header-line . "C-j: Goto node (keeping session)") (multimatch) (group . helm) (get-line . buffer-substring) (search helm-mm-exact-search helm-mm-search helm-candidates-in-buffer-search-default-fn) (info-file . "automake-history")))
(setq-default helm-source-info-history '((name . "Info Index: history") (init . helm-info-init) (candidates . helm-candidates-in-buffer) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action ("Goto node" . helm-info-goto)) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (display-to-real . helm-info-display-to-real) (volatile) (match identity) (redisplay . identity) (header-line . "C-j: Goto node (keeping session)") (multimatch) (group . helm) (get-line . buffer-substring) (search helm-mm-exact-search helm-mm-search helm-candidates-in-buffer-search-default-fn) (info-file . "history")))
(setq-default ido-buffer-history '("init-java.el" "init-windows.el" "init-key.el" "test1.c" "test.cpp" "init.el" "init-word.el" "init-modeline.el" "init-base.el" "*Messages*" "*scratch*" "*Flymake log*" "test.py" "init-package.el" "modeline.el" "init-tree.el" "*gud-test1*" "*Buffer List*" "*Packages*" "*clang-error*" "init-c.el" "init-gdb.el" "*clang-output*" "*compilation*" "*Completions*" "*shell*" "*Help*" "*Compile-Log*" "yasnippet" "\344\270\213\350\275\275" "init-undo-tree.el" "init-dired.el" ".emacs.d" "init-auto-complete.el" "init-ace-jump-mode.el" "init-muban.el" "init-ido.el" "*Python*" "init-python.el" "init-return-jiemian.el" "init-save-file.el" "auto-save.el"))
(setq-default ido-file-history '("init.el" "init-package.el" "init-base.el" "test.py" "init-word.el" "init-modeline.el" "modeline.el" "test1.c" "test.cpp" "init-ivy.el" "init-windows.el" "init-key.el" "init-tree.el" "init-java.el" "init-gdb.el" "init-c.el" "." "init-dired.el" "init-undo-tree.el" "init-ace-jump-mode.el" "init-auto-complete.el" "init-muban.el" "init-ido.el" "init-python.el" "init-return-jiemian.el" "init-save-file.el" "auto-save.el"))
(setq-default ivy-history '("init-modeline.el" "*Messages*" "lsp.el" "*Packages*" #("ini" 0 3 (ivy-index 0)) "test.c" "init.el" #("mode" 0 4 (ivy-index 0)) "*Help*" "*Compile-Log*" #("in" 0 2 (ivy-index 0)) "*clang-output*" "*Flycheck error messages*" #("pyt" 0 3 (ivy-index 0)) #("python" 0 6 (ivy-index 0)) #("company-t" 0 9 (ivy-index 0)) #("com" 0 3 (ivy-index 0)) #("evi" 0 3 (ivy-index 0)) "paixu.c\"" "paixu.c" "*shell*" #("pa" 0 2 (ivy-index 1)) "*gud-paixu*" "<html>...</html>" "test.py" "theme1.el" "*scratch*" #("2" 0 1 (ivy-index 0))))
(setq-default minibuffer-history '("/usr/bin/pyflakes test.py" "load-file" "list-packages" "package-install" "ivy-xref" "swiper-helm" "projectile" "diminish" "counsel" "flx" "gdb-many-windows" "gdb" "compile" "shell" "xcscope" "ace-jump-mode" "company"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default serial-name-history '("/dev/ttyS0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default swiper-history '(#("ret" 0 3 (ivy-index 0)) "mode-line-" #("powerline-selected" 0 18 (ivy-index 0)) #("format" 0 6 (ivy-index 19)) #("powerline" 0 9 (ivy-index 6)) #("winum" 0 5 (ivy-index 0))))
